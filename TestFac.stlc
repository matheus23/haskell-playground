( λ cons : ∀ a . a -> ((a -> a -> a) -> a -> a) -> ((a -> a -> a) -> a -> a) .
  λ nil : ∀ a . (a -> a -> a) -> a -> a .
  λ product : ((Int -> Int -> Int) -> Int -> Int) -> Int .
  λ zero : ∀ a . (a -> a) -> a -> a .
  λ succ : ∀ a . (a -> a) -> a -> a -> ((a -> a) -> a -> a) .
  0
)

( Λ a .
  λ head : a .
  λ tail : ((a -> a -> a) -> a -> a) .
    λ f : a -> a -> a .
    λ acc : a .
      f head (tail f acc) )

( Λ a .
  λ f : a -> a -> a .
  λ acc : a .
    acc )

( λ list : (Int -> Int -> Int) -> Int -> Int .
    list * 1 )

( Λ a .
  λ f : a -> a .
  λ z : a .
    z )

( Λ a .
  λ num : (a -> a) -> a -> a .
    λ f : a -> a .
    λ z : a .
      f (num f z) )
